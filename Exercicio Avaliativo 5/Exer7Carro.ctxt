#BlueJ class context
comment0.target=Exer7Carro
comment0.text=\r\n\ \ Implemente\ a\ classe\ Carro,\ considerando\ que\ todo\ carro\ possui\ placa,\r\nmarca,\ modelo,\ cor,\ kilometragem\ e\ capacidade\ do\ tanque\ de\ combustivel.\r\nConsidere\ ainda\ que\ este\ objeto\ mant\u00E9m\ uma\ quantidade\ de\ combust\u00EDvel\r\nem\ seu\ tanque\ e\ o\ seu\ consumo\ m\u00E9dio\ (km/litros).\ Defina\ os\ atributos\ e\r\nimplemente\ os\ m\u00E9todos\:\ construtor,\ modificadores,\ de\ acesso\ e\ toString\r\npara\ esta\ classe.\ A\ seguir,\ implemente\ tamb\u00E9m\ o\ m\u00E9todo\r\n\ \ \r\n\ \ (a)\ abastecerLitros\ que\ \u00E9\ respons\u00E1vel\ por\ adicionar\ mais\ litros\ de\ combustivel\ (par\u00E2metro)\ ao\ tanque\r\n\ \ (b)\ abastecerReais\ que\ \u00E9\ respons\u00E1vel\ tamb\u00E9m\ por\ adicionais\ mais\ litros\r\n\ \ \ \ de\ combust\u00EDvel\ ao\ tanque,\ mas\ a\ partir\ de\ um\ valor\ informado\ (como\r\n\ \ \ \ par\u00E2metro)\ em\ Reais\ (R$).\ Nesse\ caso,\ ser\u00E1\ necess\u00E1rio\ saber\ o\ pre\u00E7o\r\n\ \ \ \ do\ litro\ de\ combust\u00EDvel\ para\ calcular\ a\ quantidade\ de\ litros\ que\ o\r\n\ \ \ \ carro\ receber\u00E1.\r\n\ \ \ \ (c)\ andar\ que\ consume\ combustivel\ a\ partir\ da\ quantidade\ (par\u00E2metro)\r\nde\ km\ percorrida\ pelo\ carro.\r\n\ \ \ \ \ (d)\ capacidadeDeslocamento\ que\ define\ quantos\ km\ o\ carro\ pode\ andar\r\na\ partir\ do\ combustivel\ dispon\u00EDvel\ no\ tanque.\r\n\ \ \ \ (e)\ previsaoCombustivel\ que\ informa\ quantos\ tanques\ de\ combustivel\r\nser\u00E3o\ necess\u00E1rios\ para\ percorrer\ uma\ certa\ dist\u00E2ncia\ (informada\ como\r\npar\u00E2metro\ em\ km).\r\n\r\n\r\n\r\n\ @author\ (Eduardo\ De\ Bastiani)\ \r\n\ @version\ (23/05/23)\r\n
comment1.params=placa\ marca\ modelo\ cor\ km\ tanque\ consumoMedio
comment1.target=Exer7Carro(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ double,\ double,\ double)
comment10.params=kmRodados
comment10.target=void\ setKmRodados(double)
comment11.params=
comment11.target=double\ getKmRodados()
comment12.params=tanque
comment12.target=void\ setTanque(double)
comment13.params=
comment13.target=double\ getTanque()
comment14.params=comsumoMedio
comment14.target=void\ setConsumoMedio(double)
comment15.params=
comment15.target=double\ getConsumoMedio()
comment16.params=litros
comment16.target=void\ abastecerLitros(double)
comment17.params=reais
comment17.target=void\ abastecerReais(double)
comment18.params=km
comment18.target=void\ andar(double)
comment19.params=
comment19.target=double\ capacidadeDeslocamento()
comment2.params=placa
comment2.target=void\ setPlaca(java.lang.String)
comment20.params=km
comment20.target=double\ previsaoCombustivel(double)
comment21.params=
comment21.target=java.lang.String\ toString()
comment3.params=
comment3.target=java.lang.String\ getPlaca()
comment4.params=marca
comment4.target=void\ setMarca(java.lang.String)
comment5.params=
comment5.target=java.lang.String\ getMarca()
comment6.params=modelo
comment6.target=void\ setModelo(java.lang.String)
comment7.params=
comment7.target=java.lang.String\ getModelo()
comment8.params=cor
comment8.target=void\ setCor(java.lang.String)
comment9.params=
comment9.target=java.lang.String\ getCor()
numComments=22
